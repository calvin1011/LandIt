version: '3.8'

services:
  # PostgreSQL with pgvector for job matching
  postgres:
    image: pgvector/pgvector:pg15
    container_name: landit_postgres
    environment:
      POSTGRES_DB: landit_db
      POSTGRES_USER: landit_user
      POSTGRES_PASSWORD: landit_secure_2024
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5433:5433"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    restart: unless-stopped
    networks:
      - landit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U landit_user -d landit_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Python FastAPI backend
  backend:
    build:
      context: ./spacy-ner
      dockerfile: Dockerfile
    container_name: landit_backend
    environment:
      # Database connection
      DB_HOST: postgres
      DB_PORT: 5433
      DB_NAME: landit_db
      DB_USER: landit_user
      DB_PASSWORD: landit_secure_2024

      # API configuration
      API_HOST: 0.0.0.0
      API_PORT: 8000

      # ML/AI configuration
      TRANSFORMERS_CACHE: /app/cache
      HF_HOME: /app/cache
    ports:
      - "8000:8000"
    volumes:
      - ./spacy-ner:/app
      - transformers_cache:/app/cache
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - landit-network
    command: ["uvicorn", "api:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # React frontend
  frontend:
    build:
      context: ./landit-ui
      dockerfile: Dockerfile
    container_name: landit_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./landit-ui:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - landit-network
    command: ["npm", "start"]

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: landit_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@landit.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - landit-network
    profiles:
      - tools  # Only start with: docker-compose --profile tools up

volumes:
  postgres_data:
  pgadmin_data:
  transformers_cache:

networks:
  landit-network:
    driver: bridge